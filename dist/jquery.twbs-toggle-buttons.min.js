/*
 Twitter Bootstrap Toogle Buttons 0.0.1
 Available under the MIT license.
 See https://github.com/prokki/twbs-toggle-buttons for more information.
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(b,c,a){b instanceof String&&(b=String(b));for(var d=b.length,e=0;e<d;e++){var f=b[e];if(c.call(a,f,e,b))return{i:e,v:f}}return{i:-1,v:void 0}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(b,c,a){if(a.get||a.set)throw new TypeError("ES3 does not support getters and setters.");b!=Array.prototype&&b!=Object.prototype&&(b[c]=a.value)};
$jscomp.getGlobal=function(b){return"undefined"!=typeof window&&window===b?b:"undefined"!=typeof global&&null!=global?global:b};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(b,c,a,d){if(c){a=$jscomp.global;b=b.split(".");for(d=0;d<b.length-1;d++){var e=b[d];e in a||(a[e]={});a=a[e]}b=b[b.length-1];d=a[b];c=c(d);c!=d&&null!=c&&$jscomp.defineProperty(a,b,{configurable:!0,writable:!0,value:c})}};
$jscomp.polyfill("Array.prototype.find",function(b){return b?b:function(b,a){return $jscomp.findInternal(this,b,a).v}},"es6-impl","es3");
function TwbsToggleButtons(b,c){this.$_element=b;this._initializeOptions=function(a){this._options=$.extend({},TwbsToggleButtons.DEFAULTS,a||{});"string"===typeof this._options.twbsClassActive&&(this._options.twbsClassActive=[this._options.twbsClassActive]);"string"===typeof this._options.twbsClassDeactive&&(this._options.twbsClassDeactive=[this._options.twbsClassDeactive])};this._resetDOM=function(a){this.$_element.find("[role='button']").each(function(b,c){c===a?this._activateButton(c):this._deactivateButton(c)}.bind(this))};
this._initializeDOM=function(){var a=this.$_element.find("[role='button']").filter("."+this._options.classActive);if(1<a.length)throw"Only one element with class '"+this._options.classActive+"' allowed within a twbsToggleButton group.";if(0!==a.length||this._options.allowNone)1===a.length&&this._resetDOM(a.get(0));else throw"If option 'allowNone' is set to false, an element must get class '"+this._options.classActive+"'.";};this._eventClick=function(a){a=a.currentTarget;if(a.classList.contains(this._options.classActive))return!1;
this._resetDOM(a);return!0};this._activateButton=function(a){void 0!==a.dataset.twbsToggleButtonsClassActive&&0<a.dataset.twbsToggleButtonsClassActive.length?a.classList.add(a.dataset.twbsToggleButtonsClassActive):this._options.twbsClassActive.forEach(function(b){a.classList.add(b)});this._options.twbsClassDeactive.forEach(function(b){a.classList.remove(b)});a.classList.add(this._options.classActive)};this._deactivateButton=function(a){void 0!==a.dataset.twbsToggleButtonsClassActive&&0<a.dataset.twbsToggleButtonsClassActive.length&&
a.classList.remove(a.dataset.twbsToggleButtonsClassActive);this._options.twbsClassActive.forEach(function(b){a.classList.remove(b)});this._options.twbsClassDeactive.forEach(function(b){a.classList.add(b)});a.classList.remove(this._options.classActive)};this._initializeOptions(c);this._initializeDOM();this.$_element.find("[role='button']").on("click",this._eventClick.bind(this));this.$_element.data("twbsToggleButtons",this)}
TwbsToggleButtons.DEFAULTS={allowNone:!1,classActive:"active",twbsClassActive:"btn-success",twbsClassDeactive:"btn-secondary"};(function(b){null==b.fn.twbsToggleButtons&&(b.fn.twbsToggleButtons=function(c){var a=["clear","destroy"];c=c||{};if("object"===typeof c)return this.each(function(){var a=b.extend(!0,{},c);void 0===b(this).data("twbsToggleButtons")?new TwbsToggleButtons(b(this),a):(a=b(this).data("twbsToggleButtons"),null===a&&window.console&&console.error&&console.warn("Error on Initialization as TwbsToggleButtons: "+this))}),this;if("string"===typeof c){var d,e=Array.prototype.slice.call(arguments,1);this.each(function(){var a=
b(this).data("twbsToggleButtons");null==a&&window.console&&console.error?console.error("The twbsToggleButtons('"+c+"') method was called on an element that is not using TwbsToggleButtons."):"function"!==typeof a[c]&&console.error("Method '"+c+"' is not implemented in TwbsToggleButtons.");d=a[c].apply(a,e)});return-1<b.inArray(c,a)?this:d}throw Error("Invalid arguments for TwbsToggleButtons: "+c);})})(jQuery);
